package tictactoe

/*Given a non negative array, find the number of subsequences having product smaller than K.

Examples:

Input : [1, 2, 3, 4]
        k = 10
Output :11
The subsequences are {1}, {2}, {3}, {4},
{1, 2}, {1, 3}, {1, 4}, {2, 3}, {2, 4},
{1, 2, 3}, {1, 2, 4}

Input  : [4, 8, 7, 2]
         k = 50
Output : 9

*/

fun countAllSubsequencesProductLessThanK(aa: Array<Int>, k : Int) {
    val n = aa.size
    val tt = Array(k+1){IntArray(n+1)}
    for (i in 1 .. k) {
        for (j in 1 .. n) {
            tt[i][j] = tt[i][j-1]
            if (aa[j-1] <= i) {
                tt[i][j] += tt[i/aa[j-1]][j-1] +1
            }
        }
    }
    print(tt[k][n])
}

fun main() {
    val aa = arrayOf(1, 2, 3, 4)
    val k = 10
    countAllSubsequencesProductLessThanK(aa, k)
}
